// <auto-generated />
using System;
using MCP_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MCP_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MCP_API.Models.Tables.HackathonDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Badge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<int>("HackathonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastSubmission")
                        .HasColumnType("datetime2");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Score")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hackathons", (string)null);
                });

            modelBuilder.Entity("MCP_API.Models.Tables.HackathonsMasterDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Badges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TestCases")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("difficulty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("skill")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HackathonsMaster", (string)null);
                });

            modelBuilder.Entity("MCP_API.Models.Tables.SummaryDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Summary");
                });

            modelBuilder.Entity("MCP_API.Models.Tables.TeamMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeamMajor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Teamname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TeamsMaster");
                });

            modelBuilder.Entity("MCP_API.Models.Tables.Teams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("teamid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("MCP_API.Models.Tables.UserDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AiRecommendations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("Degree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<string>("ProgrammingLanguagesKnown")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Skills")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("streak")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AiRecommendations = "Consider mentoring students in system design.",
                            DateOfRegister = new DateTime(2025, 6, 19, 20, 48, 24, 0, DateTimeKind.Unspecified),
                            Degree = "M.Tech",
                            Email = "admin@example.com",
                            Experience = "10 Years",
                            Password = "Admin@123",
                            PhoneNumber = "9876543210",
                            PhotoUrl = "admin-photo.jpg",
                            ProgrammingLanguagesKnown = "C#,Java",
                            Role = "Admin",
                            Skills = "Leadership,Planning",
                            Specialization = "Software Engineering",
                            Username = "adminuser"
                        },
                        new
                        {
                            Id = 2,
                            AiRecommendations = "Focus on DSA and backend frameworks.",
                            DateOfRegister = new DateTime(2025, 6, 19, 20, 48, 24, 0, DateTimeKind.Unspecified),
                            Degree = "B.Tech",
                            Email = "john@example.com",
                            Experience = "1 Year Internship",
                            Password = "Student@123",
                            PhoneNumber = "9123456789",
                            PhotoUrl = "john.jpg",
                            ProgrammingLanguagesKnown = "C++,Python",
                            Role = "Student",
                            Skills = "C++,Java",
                            Specialization = "Computer Science",
                            Username = "johnstudent"
                        },
                        new
                        {
                            Id = 3,
                            AiRecommendations = "Explore Kaggle challenges and GitHub projects.",
                            DateOfRegister = new DateTime(2025, 6, 19, 20, 48, 24, 0, DateTimeKind.Unspecified),
                            Degree = "BCA",
                            Email = "ana@example.com",
                            Experience = "6 Months Training",
                            Password = "Ana@321",
                            PhoneNumber = "9988776655",
                            PhotoUrl = "ana.jpg",
                            ProgrammingLanguagesKnown = "Python,JavaScript",
                            Role = "Student",
                            Skills = "Python,ML",
                            Specialization = "AI",
                            Username = "anastudent"
                        },
                        new
                        {
                            Id = 4,
                            AiRecommendations = "Participate in CTFs and security blogs.",
                            DateOfRegister = new DateTime(2025, 6, 19, 20, 48, 24, 0, DateTimeKind.Unspecified),
                            Degree = "B.Sc",
                            Email = "rahul@example.com",
                            Experience = "College Projects",
                            Password = "Rahul#456",
                            PhoneNumber = "9001234567",
                            PhotoUrl = "rahul.jpg",
                            ProgrammingLanguagesKnown = "Python,C",
                            Role = "Student",
                            Skills = "Networking,Security",
                            Specialization = "Cybersecurity",
                            Username = "rahulstudent"
                        },
                        new
                        {
                            Id = 5,
                            AiRecommendations = "Enhance React and Node.js skills.",
                            DateOfRegister = new DateTime(2025, 6, 19, 20, 48, 24, 0, DateTimeKind.Unspecified),
                            Degree = "B.E",
                            Email = "divya@example.com",
                            Experience = "Freelance projects",
                            Password = "Divya@789",
                            PhoneNumber = "9876012345",
                            PhotoUrl = "divya.jpg",
                            ProgrammingLanguagesKnown = "JavaScript,HTML,CSS",
                            Role = "Student",
                            Skills = "Web Development",
                            Specialization = "Information Technology",
                            Username = "divyastudent"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
